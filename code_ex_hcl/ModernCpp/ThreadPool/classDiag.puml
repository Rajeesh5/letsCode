
@startuml dispatcher

class AbstractRequest {  
   + int getValue()
   + void setValue()   
   + void process()
   + void finish() 
}

class Request {
   
	+ getValue()
	+ setValue()  
	+ setOutput()
	+ process()
	+ finish() 
	- int value
	- DoCallBack m_callback
}

class Worker {
	- condition_variable cv
	- mutex mtx
	- unique_lock ulock
	- AbstractRequest m_pRequest
	- bool running
	- bool ready

	+ void run()
	+ void stop()
	+ void setRequest()
	+ void notify()
    
}

class Dispatcher {
	- queue requestQ
	- queue workerQ
	- mutex requestQ_mutex
	- mutex workerQ_mutex
	- vector allWorkers
	- vector threads

	+ bool init()
	+ bool stop()
	+ void addRequest()
	+ bool addWorker()
}































AbstractRequest-->Request

@enduml